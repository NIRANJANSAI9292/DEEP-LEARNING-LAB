import numpy as np
import matplotlib.pyplot as plt

# Input range
x = np.linspace(-10, 10, 400)

# Sigmoid
def sigmoid(x):
    return 1 / (1 + np.exp(-x))

# Tanh
def tanh(x):
    return np.tanh(x)

# ReLU
def relu(x):
    return np.maximum(0, x)

# Leaky ReLU
def leaky_relu(x, alpha=0.01):
    return np.where(x > 0, x, alpha * x)

# Softmax (for vector input)
def softmax(x):
    exp_x = np.exp(x - np.max(x))  # stability improvement
    return exp_x / exp_x.sum(axis=0)

# Plot functions
plt.figure(figsize=(12,8))

plt.subplot(2,2,1)
plt.plot(x, sigmoid(x))
plt.title("Sigmoid")

plt.subplot(2,2,2)
plt.plot(x, tanh(x))
plt.title("Tanh")

plt.subplot(2,2,3)
plt.plot(x, relu(x))
plt.title("ReLU")

plt.subplot(2,2,4)
plt.plot(x, leaky_relu(x))
plt.title("Leaky ReLU")

plt.show()

# Example Softmax
scores = np.array([2.0, 1.0, 0.1])
print("Softmax output:", softmax(scores))
